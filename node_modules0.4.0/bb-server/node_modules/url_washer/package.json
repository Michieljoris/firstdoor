{
  "name": "url_washer",
  "description": "Pass in an url and get back the html cleansed of js..",
  "version": "0.2.0",
  "homepage": "https://github.com/michieljoris/url_washer",
  "keywords": [
    "phantomjs",
    "seo",
    "server"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/michieljoris/url_washer.git"
  },
  "author": {
    "name": "Michiel van Oosten",
    "email": "mail@axion5.net",
    "url": "http://blog.axion5.net/"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/michieljoris/url_washer/blob/master/LICENSE.txt"
    }
  ],
  "main": "wash.js",
  "engines": {
    "node": ">= 0.6.x"
  },
  "dependencies": {
    "dougs_vow": "*",
    "which": "*",
    "request": "*",
    "extend": "*"
  },
  "devDependencies": {
    "fs-extra": "0.3.x",
    "doccoh": "0.4.1"
  },
  "private": false,
  "scripts": {
    "dist": "node dist; node_modules/.bin/doccoh src/package.js"
  },
  "readme": "url_washer\n-----------------\n\n    var wash =require('path/to/wash.js');\n    var washed = wash('someurl', someOptions);\n\nwash returns a vow (Crockford's version) that promises to deliver html\nrendered by phantomjs after browsing someUrl.\n\nIf phantomjs is not on the path, you can pass in the path in options:\n\n    someOptions = \n    { phantomPath: 'path/to/phantomjs', \n\t  seoServer: 'seoServerUrl'}\n\nYou can also do\n\n    npm install phantomjs \n\t\nin the url_washer dir.\n\nOr uncomment the phantomjs dependency in package.js, then:\n\n    node package.js\n\tnpm install\n\t\nIf wash can't find a phantomjs executable it will ask the seoServer\n(if set in options)\n\nIt will do an ajax call to http://seoServerUrl?url=someUrl, and expect\nhtml to be returned.\n\nFinally:\n\n    washed.when(function(html) { \n\t   //send the html perhaps\n\t},\n\tfunction(err) {\n\t  //no dice, you will have to send uncleansed html\n    })\n\n\n\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/michieljoris/url_washer/issues"
  },
  "_id": "url_washer@0.2.0",
  "_from": "url_washer@*"
}
