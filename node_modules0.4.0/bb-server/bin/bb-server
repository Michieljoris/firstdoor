#!/usr/bin/env node
var sys = require('sys');

var bbServer = require('../lib/bb-server.js'),
    argv = require('optimist').argv;

if (argv.h || argv.help) {
    console.log([
        "usage: bb-server [root] [options]",
        "",
        "options:",
        "  --root          Root to serve the files from",
        "  -p --port          Port to use [HTTPSERVER_PORT || 8080]",
        "  -a --address       Address to use [HTTPSERVER_IPADDR || 0.0.0.0]",
        "  --dir              Show dir contents [true]",
        "  -i --index         Send index.htm[l] when present in directory",
        "  --forward          Forward url/prefix to target",
        "  --prefix           [db]",
        "  --target           [http://localhost:5984]",
        "  -h --https         Start https server",
        "  -s --sessions      Enable sessions (adds sessions to req)",
        "  -w --websocket     Turn on websocket server",
        "  -c --cache         Enable cache headers",
        "  --bust             Strip . __bust__<date> from request paths [true]",
        "  -z --zip           compress response if requested and possible",
        "  -m --minify        minify response value if possible", 
        "  -t --transpile     transpile file before sending it ", 
	
        "  --bot              Respond to bot requests with a prerendered page",
        "  --spa              Single page application [index.html]",
        "  --fragment         Respond with a prerendered page",
        "  --hashbang         Respond with a prerendered page when bot is detected",
	
        "  -l --log           Write log to path [stdout]",
        "  -q --quiet         Suppress messages from output",
        "  --file             load options from .json file",
        "  -h --help          Print this list and exit.",
	"",
	
        // "  -e --enclose       Inject script [refresh socket listener]",
        // "  -o --cors          Enable cors",
        // "  -a --authenticate  List of auth providers to enable [persona]",
        "Load options from file for more flexibility, see example_server.js.",
	
    ].join('\n'));
  process.exit();
}

function readConfigFile(fileName) {
    var parsedJSON;
    try { parsedJSON = require('fs').readFileSync(fileName);
          // console.log('Config file read.', parsedJSON);
          parsedJSON = JSON.parse(parsedJSON);
        } catch (e) {
            console.log('Error reading config file: ', e);
        }
    return parsedJSON;
} 

if (argv.file) {
    argv = readConfigFile(argv.file);
    // console.log(argv);
}

bbServer.go(argv);
